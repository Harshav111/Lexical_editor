{"version":3,"file":"static/js/987.75d19e78.chunk.js","mappings":"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","sources":["components/ui/ImageResizer/index.jsx","components/CustomNodes/ImageNode/ImageComponent.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport \"./ImageResizer.css\";\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nconst Direction = {\n  east: 1 << 0,\n  north: 1 << 3,\n  south: 1 << 1,\n  west: 1 << 2,\n};\n\nexport default function ImageResizer({\n  onResizeStart,\n  onResizeEnd,\n  buttonRef,\n  imageRef,\n  maxWidth,\n  editor,\n  showCaption,\n  setShowCaption,\n  captionsEnabled,\n}) {\n  const controlWrapperRef = useRef(null);\n  const userSelect = useRef({\n    priority: \"\",\n    value: \"default\",\n  });\n  const positioningRef = useRef({\n    currentHeight: 0,\n    currentWidth: 0,\n    direction: 0,\n    isResizing: false,\n    ratio: 0,\n    startHeight: 0,\n    startWidth: 0,\n    startX: 0,\n    startY: 0,\n  });\n\n  \n  const editorRootElement = editor.getRootElement();\n  // Find max width, accounting for editor padding.\n  const maxWidthContainer = maxWidth\n    ? maxWidth\n    : editorRootElement !== null\n    ? editorRootElement.getBoundingClientRect().width - 20\n    : 100;\n  const maxHeightContainer =\n    editorRootElement !== null\n      ? editorRootElement.getBoundingClientRect().height - 20\n      : 100;\n\n  const minWidth = 100;\n  const minHeight = 100;\n\n  const setStartCursor = (direction) => {\n    const ew = direction === Direction.east || direction === Direction.west;\n    const ns = direction === Direction.north || direction === Direction.south;\n    const nwse =\n      (direction & Direction.north && direction & Direction.west) ||\n      (direction & Direction.south && direction & Direction.east);\n\n    const cursorDir = ew ? \"ew\" : ns ? \"ns\" : nwse ? \"nwse\" : \"nesw\";\n\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty(\n        \"cursor\",\n        `${cursorDir}-resize`,\n        \"important\"\n      );\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty(\n        \"cursor\",\n        `${cursorDir}-resize`,\n        \"important\"\n      );\n      userSelect.current.value = document.body.style.getPropertyValue(\n        \"-webkit-user-select\"\n      );\n      userSelect.current.priority = document.body.style.getPropertyPriority(\n        \"-webkit-user-select\"\n      );\n      document.body.style.setProperty(\n        \"-webkit-user-select\",\n        `none`,\n        \"important\"\n      );\n    }\n  };\n\n  const setEndCursor = () => {\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty(\"cursor\", \"default\");\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty(\"cursor\", \"default\");\n      document.body.style.setProperty(\n        \"-webkit-user-select\",\n        userSelect.current.value,\n        userSelect.current.priority\n      );\n    }\n  };\n\n  const handlePointerDown = (event, direction) => {\n    if (!editor.isEditable()) {\n      return;\n    }\n\n    const image = imageRef.current;\n    const controlWrapper = controlWrapperRef.current;\n\n    if (image !== null && controlWrapper !== null) {\n      const { width, height } = image.getBoundingClientRect();\n      const positioning = positioningRef.current;\n      positioning.startWidth = width;\n      positioning.startHeight = height;\n      positioning.ratio = width / height;\n      positioning.currentWidth = width;\n      positioning.currentHeight = height;\n      positioning.startX = event.clientX;\n      positioning.startY = event.clientY;\n      positioning.isResizing = true;\n      positioning.direction = direction;\n\n      setStartCursor(direction);\n      onResizeStart();\n\n      controlWrapper.classList.add(\"image-control-wrapper--resizing\");\n      image.style.height = `${height}px`;\n      image.style.width = `${width}px`;\n\n      document.addEventListener(\"pointermove\", handlePointerMove);\n      document.addEventListener(\"pointerup\", handlePointerUp);\n    }\n  };\n  const handlePointerMove = (event) => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n\n    const isHorizontal =\n      positioning.direction & (Direction.east | Direction.west);\n    const isVertical =\n      positioning.direction & (Direction.south | Direction.north);\n\n    if (image !== null && positioning.isResizing) {\n      // Corner cursor\n      if (isHorizontal && isVertical) {\n        let diff = Math.floor(positioning.startX - event.clientX);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(\n          positioning.startWidth + diff,\n          minWidth,\n          maxWidthContainer\n        );\n\n        const height = width / positioning.ratio;\n        image.style.width = `${width}px`;\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n        positioning.currentWidth = width;\n      } else if (isVertical) {\n        let diff = Math.floor(positioning.startY - event.clientY);\n        diff = positioning.direction & Direction.south ? -diff : diff;\n\n        const height = clamp(\n          positioning.startHeight + diff,\n          minHeight,\n          maxHeightContainer\n        );\n\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n      } else {\n        let diff = Math.floor(positioning.startX - event.clientX);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(\n          positioning.startWidth + diff,\n          minWidth,\n          maxWidthContainer\n        );\n\n        image.style.width = `${width}px`;\n        positioning.currentWidth = width;\n      }\n    }\n  };\n  const handlePointerUp = () => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n    const controlWrapper = controlWrapperRef.current;\n    if (image !== null && controlWrapper !== null && positioning.isResizing) {\n      const width = positioning.currentWidth;\n      const height = positioning.currentHeight;\n      positioning.startWidth = 0;\n      positioning.startHeight = 0;\n      positioning.ratio = 0;\n      positioning.startX = 0;\n      positioning.startY = 0;\n      positioning.currentWidth = 0;\n      positioning.currentHeight = 0;\n      positioning.isResizing = false;\n\n      controlWrapper.classList.remove(\"image-control-wrapper--resizing\");\n\n      setEndCursor();\n      onResizeEnd(width, height);\n\n      document.removeEventListener(\"pointermove\", handlePointerMove);\n      document.removeEventListener(\"pointerup\", handlePointerUp);\n    }\n  };\n  return (\n    <div ref={controlWrapperRef}>\n      {!showCaption && captionsEnabled && (\n        <button\n          className=\"image-caption-button\"\n          ref={buttonRef}\n          onClick={() => {\n            setShowCaption(!showCaption);\n          }}\n        >\n          Add Caption\n        </button>\n      )}\n      <div\n        className=\"image-resizer image-resizer-n\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-ne\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-e\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-se\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-s\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-sw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-w\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-nw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.west);\n        }}\n      />\n    </div>\n  );\n}\n","import \"./ImageNode.css\";\n\nimport { AutoFocusPlugin } from \"@lexical/react/LexicalAutoFocusPlugin\";\nimport { useCollaborationContext } from \"@lexical/react/LexicalCollaborationContext\";\nimport { CollaborationPlugin } from \"@lexical/react/LexicalCollaborationPlugin\";\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\nimport { HashtagPlugin } from \"@lexical/react/LexicalHashtagPlugin\";\nimport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\nimport { LexicalNestedComposer } from \"@lexical/react/LexicalNestedComposer\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nimport { useLexicalNodeSelection } from \"@lexical/react/useLexicalNodeSelection\";\nimport { mergeRegister } from \"@lexical/utils\";\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  $setSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  DRAGSTART_COMMAND,\n  KEY_BACKSPACE_COMMAND,\n  KEY_DELETE_COMMAND,\n  KEY_ENTER_COMMAND,\n  KEY_ESCAPE_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n} from \"lexical\";\nimport * as React from \"react\";\nimport { Suspense, useCallback, useEffect, useRef, useState } from \"react\";\n\nimport ImageResizer from \"../../ui/ImageResizer\";\nimport { $isImageNode } from \".\";\n\nconst imageCache = new Set();\n\nfunction useSuspenseImage(src) {\n  if (!imageCache.has(src)) {\n    throw new Promise((resolve) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => {\n        imageCache.add(src);\n        resolve(null);\n      };\n    });\n  }\n}\n\nfunction LazyImage({\n  altText,\n  className,\n  imageRef,\n  src,\n  width,\n  height,\n  maxWidth,\n}) {\n  useSuspenseImage(src);\n  return (\n    <img\n      className={className || undefined}\n      src={src}\n      alt={altText}\n      ref={imageRef}\n      style={{\n        height,\n        maxWidth,\n        width,\n      }}\n      draggable=\"false\"\n    />\n  );\n}\n\nexport default function ImageComponent({\n  src,\n  altText,\n  nodeKey,\n  width,\n  height,\n  maxWidth,\n  resizable,\n  showCaption,\n  caption,\n  captionsEnabled,\n}) {\n  const imageRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [isSelected, setSelected, clearSelection] =\n    useLexicalNodeSelection(nodeKey);\n  const [isResizing, setIsResizing] = useState(false);\n  const { isCollabActive } = useCollaborationContext();\n  const [editor] = useLexicalComposerContext();\n  const [selection, setSelection] = useState(null);\n  const activeEditorRef = useRef(null);\n\n  const onDelete = useCallback(\n    (payload) => {\n      if (isSelected && $isNodeSelection($getSelection())) {\n        const event = payload;\n        event.preventDefault();\n        const node = $getNodeByKey(nodeKey);\n        if ($isImageNode(node)) {\n          node.remove();\n        }\n        setSelected(false);\n      }\n      return false;\n    },\n    [isSelected, nodeKey, setSelected]\n  );\n\n  const onEnter = useCallback(\n    (event) => {\n      const latestSelection = $getSelection();\n      const buttonElem = buttonRef.current;\n      if (\n        isSelected &&\n        $isNodeSelection(latestSelection) &&\n        latestSelection.getNodes().length === 1\n      ) {\n        if (showCaption) {\n          // Move focus into nested editor\n          $setSelection(null);\n          event.preventDefault();\n          caption.focus();\n          return true;\n        } else if (\n          buttonElem !== null &&\n          buttonElem !== document.activeElement\n        ) {\n          event.preventDefault();\n          buttonElem.focus();\n          return true;\n        }\n      }\n      return false;\n    },\n    [caption, isSelected, showCaption]\n  );\n\n  const onEscape = useCallback(\n    (event) => {\n      if (\n        activeEditorRef.current === caption ||\n        buttonRef.current === event.target\n      ) {\n        $setSelection(null);\n        editor.update(() => {\n          setSelected(true);\n          const parentRootElement = editor.getRootElement();\n          if (parentRootElement !== null) {\n            parentRootElement.focus();\n          }\n        });\n        return true;\n      }\n      return false;\n    },\n    [caption, editor, setSelected]\n  );\n\n  useEffect(() => {\n    let isMounted = true;\n    const unregister = mergeRegister(\n      editor.registerUpdateListener(({ editorState }) => {\n        if (isMounted) {\n          setSelection(editorState.read(() => $getSelection()));\n        }\n      }),\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        (_, activeEditor) => {\n          activeEditorRef.current = activeEditor;\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        CLICK_COMMAND,\n        (payload) => {\n          const event = payload;\n\n          if (isResizing) {\n            return true;\n          }\n          if (event.target === imageRef.current) {\n            if (event.shiftKey) {\n              setSelected(!isSelected);\n            } else {\n              clearSelection();\n              setSelected(true);\n            }\n            return true;\n          }\n\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        DRAGSTART_COMMAND,\n        (event) => {\n          if (event.target === imageRef.current) {\n            // TODO This is just a temporary workaround for FF to behave like other browsers.\n            // Ideally, this handles drag & drop too (and all browsers).\n            event.preventDefault();\n            return true;\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        KEY_DELETE_COMMAND,\n        onDelete,\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        KEY_BACKSPACE_COMMAND,\n        onDelete,\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(KEY_ENTER_COMMAND, onEnter, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(KEY_ESCAPE_COMMAND, onEscape, COMMAND_PRIORITY_LOW)\n    );\n    return () => {\n      isMounted = false;\n      unregister();\n    };\n  }, [\n    clearSelection,\n    editor,\n    isResizing,\n    isSelected,\n    nodeKey,\n    onDelete,\n    onEnter,\n    onEscape,\n    setSelected,\n  ]);\n\n  const setShowCaption = () => {\n    editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n      if ($isImageNode(node)) {\n        node.setShowCaption(true);\n      }\n    });\n  };\n\n  const onResizeEnd = (nextWidth, nextHeight) => {\n    // Delay hiding the resize bars for click case\n    setTimeout(() => {\n      setIsResizing(false);\n    }, 200);\n\n    editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n      if ($isImageNode(node)) {\n        node.setWidthAndHeight(nextWidth, nextHeight);\n      }\n    });\n  };\n\n  const onResizeStart = () => {\n    setIsResizing(true);\n  };\n\n  const draggable = isSelected && $isNodeSelection(selection) && !isResizing;\n  const isFocused = isSelected || isResizing;\n  return (\n    <Suspense fallback={null}>\n      <>\n        <div draggable={draggable}>\n          <LazyImage\n            className={\n              isFocused\n                ? `focused ${$isNodeSelection(selection) ? \"draggable\" : \"\"}`\n                : null\n            }\n            src={src}\n            altText={altText}\n            imageRef={imageRef}\n            width={width}\n            height={height}\n            maxWidth={maxWidth}\n          />\n        </div>\n\n        {resizable && $isNodeSelection(selection) && isFocused && (\n          <ImageResizer\n            showCaption={showCaption}\n            setShowCaption={setShowCaption}\n            editor={editor}\n            buttonRef={buttonRef}\n            imageRef={imageRef}\n            maxWidth={maxWidth}\n            onResizeStart={onResizeStart}\n            onResizeEnd={onResizeEnd}\n            captionsEnabled={captionsEnabled}\n          />\n        )}\n      </>\n    </Suspense>\n  );\n}\n"],"names":["clamp","value","min","max","Math","Direction","east","north","south","west","ImageResizer","_ref","onResizeStart","onResizeEnd","buttonRef","imageRef","maxWidth","editor","showCaption","setShowCaption","captionsEnabled","controlWrapperRef","useRef","userSelect","priority","positioningRef","currentHeight","currentWidth","direction","isResizing","ratio","startHeight","startWidth","startX","startY","editorRootElement","getRootElement","maxWidthContainer","getBoundingClientRect","width","maxHeightContainer","height","handlePointerDown","event","isEditable","image","current","controlWrapper","positioning","clientX","clientY","ew","ns","nwse","cursorDir","style","setProperty","concat","document","body","getPropertyValue","getPropertyPriority","setStartCursor","classList","add","addEventListener","handlePointerMove","handlePointerUp","isHorizontal","isVertical","diff","floor","remove","removeEventListener","_jsxs","ref","children","_jsx","className","onClick","onPointerDown","imageCache","Set","LazyImage","altText","src","has","Promise","resolve","img","Image","onload","useSuspenseImage","undefined","alt","draggable","ImageComponent","_ref2","nodeKey","resizable","caption","isSelected","setSelected","clearSelection","useLexicalNodeSelection","setIsResizing","useState","isCollabActive","useCollaborationContext","useLexicalComposerContext","selection","setSelection","activeEditorRef","onDelete","useCallback","payload","$isNodeSelection","$getSelection","preventDefault","node","$getNodeByKey","$isImageNode","onEnter","latestSelection","buttonElem","getNodes","length","$setSelection","focus","activeElement","onEscape","target","update","parentRootElement","useEffect","isMounted","unregister","mergeRegister","registerUpdateListener","_ref3","editorState","read","registerCommand","SELECTION_CHANGE_COMMAND","_","activeEditor","COMMAND_PRIORITY_LOW","CLICK_COMMAND","shiftKey","DRAGSTART_COMMAND","KEY_DELETE_COMMAND","KEY_BACKSPACE_COMMAND","KEY_ENTER_COMMAND","KEY_ESCAPE_COMMAND","isFocused","Suspense","fallback","_Fragment","nextWidth","nextHeight","setTimeout","setWidthAndHeight"],"sourceRoot":""}